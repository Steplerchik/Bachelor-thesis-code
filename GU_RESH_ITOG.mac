!                   Решаем
/SOL
  
ANTYPE,0
EQSLV,SPAR 


csys,0
lsel,u,loc,y,-Rplus,Rplus-0.25*H-mini
lsel,u,loc,y,Rplus,Rplus-0.25*H+mini
lsel,u,loc,z,0,H/2
DL,ALL,,UZ,
DL,ALL,,UX,
LSEL,ALL

lsel,u,loc,y,Rplus,-(Rplus-0.25*H-mini)
lsel,u,loc,y,-Rplus,-(Rplus-0.25*H+mini)
lsel,u,loc,z,0,H/2
DL,ALL,,UZ,
DL,ALL,,UX,
LSEL,ALL

CSYS,0
ASEL,S,LOC,Y,0
ASEL,U,LOC,Z,H-1.2*a,H-0.8*a
DA,ALL,UY,
ASEL,ALL

CSYS,1
NSEL,S,LOC,Y,0
NSEL,U,LOC,Z,mini/4,H
*GET, noc, node, 0, count 
CSYS,0
F,ALL,FZ,(1/2)/noc
NSEL,ALL

CSYS,1
NSEL,S,LOC,Y,180
NSEL,U,LOC,Z,mini/4,H
*GET, noc1, node, 0, count
CSYS,0 
F,ALL,FZ,(1/2)/noc1
NSEL,ALL

/STATUS,SOLU
SOLVE

FINISH  
/POST1  
!*  
/EFACET,1   
PLNSOL, S,EQV, 0,1.0

! Обозначаю диаметры, которыми буду пользоваться
CSYS,0
NSEL,S,LOC,Y,0
NSEL,U,LOC,Z,0,H-a-0.5*0.25*0.025*a
NSEL,U,LOC,Z,H,H-a+0.5*0.25*0.025*a
 NSEL,U,LOC,X,0,-(D+delta)/2

CSYS,1
*GET, nc, node, 0, count            
*GET, n_min, node, 0, num, min

*dim,radiusm,array,nc,1
radiusm(nc,1)=(D+delta)/2
*dim,radius,array,nc-(NINT(NINT(delta/el)/2)*2-1),1

!СОЗДАЕМ МАССИВ РАДИУСОВ

*do,i,1,nc-1,

*SET,n_num,n_min
*SET,maxim,0
*do,j,1,nc,
*GET, rad, NODE, n_num, LOC, X
*IF,rad,GT,maxim,THEN
*IF,radiusm(nc+1-i,1),GT,rad,THEN
    *SET,maxim,rad
  *ENDIF
  *ENDIF
n_num=NDNEXT(n_num)                   ! Получаем следующий номер узла в активном наборе, имеющий большее число, чем n_num
*enddo
 
radiusm(nc-i,1)=maxim
*enddo
!                                  убираем лишние точки
*SET,check,0
*SET,k,0
*do,i,1,nc
  *IF,check,EQ,0,THEN
  k=k+1
  radius(k,1)=radiusm(i,1)
  check=1
    *ELSE
  check=0
  *ENDIF 
*enddo
!                                   ПОЛУЧИЛ РАДИУС

!                           ВЫЧИСЛЯЕМ КИН по радиусам МЕТОДОМ МИНИМУМА КВАДРАТОВ


NSEL,ALL
CSYS,1
*DIM,kappa,,2
*SET,G,E/(2*(1+mu))

*SET,pi,3.141592653589793238462643
*SET,nc,nc-(NINT(NINT(delta/el)/2)*2-1)   !Перезадал nc


                                          ! ТУТ МОЕ ТВОРЧЕСТВО

CSKP,101,1,16,29,31,1,1,     ! 101 - Новая локальная ЦИЛИНДРИЧЕСКАЯ СК
CSKP,100,0,16,29,31,1,1,     ! 100 - Новая локальная ДЕКАРТОВАЯ СК

Rvnesh=0.2*a    ! Делаем внешний радиус 20%
Rvnutr=0.03*a   ! Делаем внутренний радиус 3%


tolshina=NINT(nc/2)
!       Выбираем элементы в области


tchk=190
omnom=0
Robl=Rvnutr-(Rvnesh-Rvnutr)/9
!rw=radius(tolshina)
rw=(D+delta)/2-el
PATH,step,tchk,10,1, 
*do,papa,1,10

Robl=Robl+(Rvnesh-Rvnutr)/9


!Главные точки

ofx=Robl
up=asin(ofx/rw)
xx=rw
yy1=ofx
yy2=-ofx
zz=H-a
omnom=omnom+1
PPATH,omnom,0,xx,yy1,zz,101,
omnom=omnom+1
PPATH,omnom,0,xx,yy2,zz,101,


omnom=omnom+1
PPATH,omnom,0,rw,0,H-a-Robl,101,


!промеж точки
uggi=0

*do,i,1,4
uggi=uggi+18/180*pi

ofx=Robl*cos(uggi)
up=asin(ofx/rw)
xx=rw
yy1=ofx
yy2=-ofx
zz1=H-a+Robl*sin(uggi)
zz2=H-a-Robl*sin(uggi)
  
omnom=omnom+1
PPATH,omnom,0,xx,yy1,zz1,101,
omnom=omnom+1
PPATH,omnom,0,xx,yy2,zz1,101,
omnom=omnom+1
PPATH,omnom,0,xx,yy1,zz2,101,
omnom=omnom+1
PPATH,omnom,0,xx,yy2,zz2,101,

*enddo
*enddo

RSYS,100

                                 !Запись в массив

AVPRIN,0, , 
!*  
PDEF,SX,S,X,AVG 
/PBC,PATH, ,0   
!*  
AVPRIN,0, , 
!*  
PDEF,SY,S,Y,AVG 
/PBC,PATH, ,0   
!*  
AVPRIN,0, , 
!*  
PDEF,SXY,S,XY,AVG   
/PBC,PATH, ,0   
!*  
!*  
PAGET,TRACPOIN,POIN 
PAGET,TRACDATA,TABL 
PAGET,TRACLABL,LABE 
!*  

*DIM,rr,,tchk
*DIM,tt,,tchk
*DIM,ssx,,tchk
*DIM,ssy,,tchk
*DIM,txy,,tchk


*do,i,1,tchk

rr(i)=sqrt(tracdata(i,2)**2+(tracdata(i,3)-(H-a))**2)

*IF,tracdata(i,2),GE,0,THEN
*IF,tracdata(i,3)-(H-a),LT,0,THEN
tt(i)=atan(abs(tracdata(i,2)/(tracdata(i,3)-(H-a))))
*endif
*endif

*IF,tracdata(i,2),LE,0,THEN
*IF,tracdata(i,3)-(H-a),LT,0,THEN
tt(i)=-atan(abs(tracdata(i,2)/(tracdata(i,3)-(H-a))))
*endif
*endif

*IF,tracdata(i,2),GE,0,THEN
*IF,tracdata(i,3)-(H-a),GE,0,THEN
tt(i)=pi/2+atan(abs((tracdata(i,3)-(H-a))/tracdata(i,2)))
*endif
*endif

*IF,tracdata(i,2),LE,0,THEN
*IF,tracdata(i,3)-(H-a),GE,0,THEN
tt(i)=-pi/2-atan(abs((tracdata(i,3)-(H-a))/tracdata(i,2)))
*endif
*endif

ssx(i)=tracdata(i,5)
ssy(i)=tracdata(i,6)
txy(i)=tracdata(i,7)

*enddo


L=tchk

                                           ! Возвращаем старье
!          Задаем вектор SIGMA
*DIM,SIGMA,,3*L
*SET,check,1
i=0

*do,j,1,3*L,
*IF,check,EQ,1,THEN
i=i+1
SIGMA(j)=ssx(i)
check=2
*ELSE

*IF,check,EQ,2,THEN
SIGMA(j)=ssy(i)
check=3
*ELSE
SIGMA(j)=txy(i)
check=1
*ENDIF

*ENDIF 
*enddo
!         Вектор SIGMA готов

!                                         Тут мы работаем с М
chlen=20
BETTA=0
KINA=0
TNAPRA=0
*DIM,otkl,,chlen
*DIM,otklon,,chlen
*DIM,bet,,chlen
*DIM,ki,,chlen
*DIM,tn,,chlen

*do,M,2,chlen,                                                  


!              Задаем матрицу S
*DIM,S,ARRAY,3*L,M
*SET,check,1
i=0

*do,j,1,3*L,
*IF,check,EQ,1,THEN
i=i+1
*do,n,1,M,
S(j,n)=n/2*(rr(i)**(n/2-1))*((2+n/2+(-1)**n)*cos((n/2-1)*tt(i))-(n/2-1)*cos((n/2-3)*tt(i)))
*enddo
check=2
*ELSE

*IF,check,EQ,2,THEN
*do,n,1,M,
S(j,n)=n/2*(rr(i)**(n/2-1))*((2-n/2-(-1)**n)*cos((n/2-1)*tt(i))+(n/2-1)*cos((n/2-3)*tt(i)))
*enddo
check=3
*ELSE

*do,n,1,M,
S(j,n)=n/2*(rr(i)**(n/2-1))*((n/2-1)*sin((n/2-3)*tt(i))-(n/2+(-1)**n)*sin((n/2-1)*tt(i)))
*enddo
check=1
*ENDIF

*ENDIF 
*enddo

!          Матрица S готова



!         Задаем матрицу BM
*DIM,BM,ARRAY,M,M

*do,n1,1,M,
*do,n2,1,M,

BM(n1,n2)=0
*do,j,1,3*L
BM(n1,n2)=BM(n1,n2)+S(j,n1)*S(j,n2)
*enddo

*enddo
*enddo
!         Матрица BM готова

!         Задаем вектор С
*DIM,C,,M

*do,n1,1,M,

C(n1)=0
*do,j,1,3*L
C(n1)=C(n1)+S(j,n1)*SIGMA(j)
*enddo

*enddo
!         Вектор С задан


*DIM,AM,,M
*MOPER,AM(1),BM(1,1),SOLV,C(1)

KIN=AM(1)*SQRT(2*pi)     !МПа*корень из мм
TNAPR=AM(2)*4            !МПа
bet(M)=TNAPR*SQRT(pi*a)/KIN

ki(M)=KIN*SQRT(0.001) !МПа*корень из м
tn(M)=TNAPR           !МПа

! Достали коэффициент бетта по центру фронта



! Ищем отклонение

podkor=0
podkoron=0

*do,j,1,3*L

sigm123will=0
*do,n,1,M
sigm123will=sigm123will+S(j,n)*AM(n)
*enddo

podkor=podkor+((sigm123will-SIGMA(j))/SIGMA(j))**2

podkoron=podkoron+abs((sigm123will-SIGMA(j))/SIGMA(j))
*enddo

otkl(M)=sqrt(podkor/(3*L))
otklon(M)=podkoron/(3*L)

! Нашли отклонение

!МЕТКИ
*IF,otkl(M),LE,0.02,THEN

BETTA=bet(M)
KINA=ki(M)
TNAPRA=tn(M)
imin=M

*exit
*endif


! тут удаляем массивы

*del,s
*del,bm
*del,c
*del,am

*enddo

*IF,BETTA,EQ,0,THEN
imin=0
minn=1000
*do,i,2,M,
*IF,otkl(i),LE,minn,THEN
minn=otkl(i)
imin=i
*endif
*enddo

BETTA=bet(imin)
KINA=ki(imin)
TNAPRA=tn(imin)
L=otkl(imin)
*endif



*dim,III,table,M-1,1
*DIM,MS,,M-1

*do,i,1,M-1,
III(i,1)=otkl(i+1,1)
MS(i)=i
*enddo

*VPLOT,MS,III(1,1)